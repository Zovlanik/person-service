plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
	mavenLocal()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'io.r2dbc:r2dbc-postgresql:0.8.13.RELEASE'
	implementation 'com.example.common:common:1.0.6' //	локальная библиотека с моими общими ДТОшками
	implementation "org.mapstruct:mapstruct:$mapStructVersion"
	implementation "org.flywaydb:flyway-core:$flywayDbVersion"
	implementation 'junit:junit:4.13.1'
	implementation "org.mapstruct:mapstruct:$mapStructVersion"

	// чтобы превращать объект в jsonB
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.17.1'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.17.1'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.1'


	implementation 'org.javers:javers-core:7.5.0' // чтобы отслеживать изменения в объектах

	implementation 'org.projectlombok:lombok'
	annotationProcessor "org.projectlombok:lombok"
	annotationProcessor "org.mapstruct:mapstruct-processor:$mapStructVersion"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	runtimeOnly 'org.postgresql:postgresql'
}

tasks.named('test') {
	useJUnitPlatform()
}
